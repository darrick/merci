<?php
// $Id$

/**
 * @file
 * Simpletest case for node_example module.
 *
 * Verify example module functionality.
 */

/**
 * Functionality tests for node example module.
 */
class MerciTestCase extends DrupalWebTestCase {

  public $bucket1;
  public $bucket2;
  public $bucket3;
  public $resource;

  public static function getInfo() {
    return array(
      'name' => 'MERCI node type',
      'description' => 'Verify MERCI node type.',
      'group' => 'Merci',
    );
  }

  function setUp() {
    // Enable the module.
    error_reporting(E_ALL ^ E_NOTICE);
    parent::setUp(
        'node',
        'devel',
        'content',
        'fieldgroup',
        'optionwidgets',
        'text',
        'number',
        'jquery_ui',
        'date_api',
        'date',
        'date_timezone',
        'date_popup',
        'text',
        'views',
        'merci'

        );

    // Create admin user. 
    $this->admin_user = $this->drupalCreateUser(array(
      'administer nodes', // Required to set revision checkbox
      'administer content types',
      'access administration pages',
      'administer site configuration',
      'view revisions',
      'revert revisions',
      'access devel information',
      'administer MERCI'
    ));
    // Login the admin user.
    $this->drupalLogin($this->admin_user);

    $settings = array (
      'merci_default_reservation_status' => '1',
      'merci_max_days_advance_reservation' => '0',
      'merci_saturday_is_weekend' => '1',
      'merci_sunday_is_weekend' => '1',
      'merci_hours_mon' => '09:00-17:00',
      'merci_hours_tue' => '09:00-17:00',
      'merci_hours_wed' => '09:00-17:00',
      'merci_hours_thu' => '09:00-17:00',
      'merci_hours_fri' => '09:00-17:00',
      'merci_hours_sat' => '',
      'merci_hours_sun' => '',
      'merci_hours_admin' => '07:00-22:00',
      'merci_closed_dates' => '',
      'merci_membership_discount' => '',
    );

    $this->merciCreateConfig($settings);

    $settings = array (
      'date_default_timezone_name' => 'America/Los_Angeles',
      );
    $this->drupalPost('admin/settings/date-time' , $settings, t('Save configuration'));
    $this->assertText(t("The configuration options have been saved."));
    $settings = array (
        'type'  => 'bucket'
        );
    $type = $this->merciCreateContentType($settings,'bucket');
    // Create resource item
    $edit = array(
      'title' => $this->randomName()
    );

    $this->bucket1 = $this->merciCreateNode($type,$edit);
    $edit = array(
      'title' => $this->randomName()
    );

    $this->bucket2 = $this->merciCreateNode($type,$edit);
    $edit = array(
      'title' => $this->randomName()
    );

    $this->bucket3 = $this->merciCreateNode($type,$edit);
    $settings = array (
        'type'  => 'resource'
        );
    $type = $this->merciCreateContentType($settings,'resource');
    // Create resource item
    $edit = array(
      'title' => $this->randomName()
    );

    $this->resource = $this->merciCreateNode($type,$edit);
  }


  function merciCreateContentType($settings,$merci_type) {
    // Create resource content type
    // Disable the rating for this content type: 0 for Disabled, 1 for Enabled.
    $content_type = $this->drupalCreateContentType($settings);
    $type = $content_type->type;
    $settings = array(
        'merci_type_setting' => $merci_type,
        'merci_max_hours_per_reservation' => 5
    );
    $this->drupalPost('admin/content/node-type/' . $type, $settings, t('Save content type'));
    $this->assertResponse(200);
    $this->assertRaw(' has been updated.', t('Settings modified successfully for content type.'));
    return $type;
  }

  function merciCreateNode($type,$settings,$pass=TRUE) {
    $this->drupalPost('node/add/' . $type, $settings, t('Save'));
    if($pass) {
      $this->assertText(t("@title has been created", array('@title' => $settings['title'])));
    }
    $node = node_load(array('title' => $settings['title']));
    //$this->verbose('Node created: ' . var_export($node, TRUE));
    return $node;
  }

  function merciUpdateNode($nid,$settings,$pass=TRUE) {
    $this->drupalPost("node/$nid/edit", $settings, t('Save'));
    if($pass) {
      $this->assertText(t("@title has been updated.", array('@title' => $settings['title'])));
    }
    $node = node_load($nid);
    return $node;
  }

  function merciCreateConfig($settings) {
    $this->drupalPost('admin/settings/merci' , $settings, t('Save configuration'));
    $this->assertText(t("The configuration options have been saved."));
  }
  /**
   * Verify the functionality of the example module.
   */
  function testMerciBuckets() {


    // Create merci user. 
    $this->merci_user = $this->drupalCreateUser(array(
      'view revisions',
      'revert revisions',
      'edit own bucket content',
      'delete own bucket content',
      'edit own resource content',
      'delete own resource content',
      'create reservations',
      'access devel information'
    ));
    // Login the merci user.
    $this->drupalLogin($this->merci_user);
    // Create our first reservation
    $node = $this->bucket1;
    $edit = array(
      'title' => $this->randomName(),
      'field_merci_date[0][value][date]' => '2011-01-05',
      'field_merci_date[0][value][time]' => '09:15',
      'field_merci_date[0][value2][date]' => '2011-01-05',
      'field_merci_date[0][value2][time]' => '11:15',
      'choice[0][item]' => $node->type
    );

    $first = $this->merciCreateNode('merci-reservation',$edit);

    // Create our second reservation
    $node = $this->bucket2;
    $edit = array(
      'title' => $this->randomName(),
      'field_merci_date[0][value][date]' => '2011-01-05',
      'field_merci_date[0][value][time]' => '09:15',
      'field_merci_date[0][value2][date]' => '2011-01-05',
      'field_merci_date[0][value2][time]' => '11:15',
      'choice[0][item]' => $node->type
    );

    $second = $this->merciCreateNode('merci-reservation',$edit);

    // Create our third reservation
    $node = $this->bucket3;
    $edit = array(
      'title' => $this->randomName(),
      'field_merci_date[0][value][date]' => '2011-01-05',
      'field_merci_date[0][value][time]' => '09:15',
      'field_merci_date[0][value2][date]' => '2011-01-05',
      'field_merci_date[0][value2][time]' => '11:15',
      'choice[0][item]' => $node->type
    );

    $third = $this->merciCreateNode('merci-reservation',$edit);

    // Try to create our fourth reservation.  This should FAIL
    $node = $this->bucket3;
    $edit = array(
      'title' => $this->randomName(),
      'field_merci_date[0][value][date]' => '2011-01-05',
      'field_merci_date[0][value][time]' => '09:14',
      'field_merci_date[0][value2][date]' => '2011-01-05',
      'field_merci_date[0][value2][time]' => '10:14',
      'choice[0][item]' => $node->type
    );

    $fail = $this->merciCreateNode('merci-reservation',$edit,FALSE);
    //$this->assertText(t("The dates and times for @title conflict with one or more existing reservations", array('@title' => $node->type)));
    $this->assertText(t("conflict with one or more existing reservations"));

    // Update second reservation.
    $edit = array(
      'field_merci_date[0][value][date]' => '2011-01-05',
      'field_merci_date[0][value][time]' => '09:15',
      'field_merci_date[0][value2][date]' => '2011-01-05',
      'field_merci_date[0][value2][time]' => '10:00',
    );

    $second = $this->merciUpdateNode($second->nid,$edit);

    // Update our third reservation
    $edit = array(
      'field_merci_date[0][value][date]' => '2011-01-05',
      'field_merci_date[0][value][time]' => '10:15',
      'field_merci_date[0][value2][date]' => '2011-01-05',
      'field_merci_date[0][value2][time]' => '11:15',
    );

    $third = $this->merciUpdateNode($third->nid,$edit);

    // Try to create our fourth reservation.  This should now PASS 
    $node = $this->bucket3;
    $edit = array(
      'title' => $this->randomName(),
      'field_merci_date[0][value][date]' => '2011-01-05',
      'field_merci_date[0][value][time]' => '09:14',
      'field_merci_date[0][value2][date]' => '2011-01-05',
      'field_merci_date[0][value2][time]' => '10:14',
      'choice[0][item]' => $node->type
    );

    $pass = $this->merciCreateNode('merci-reservation',$edit);
  }
}

