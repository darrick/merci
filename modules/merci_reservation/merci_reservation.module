<?php

define('MERCI_RESERVATION_ITEM_FIELD', 'field_merci_reservation_items');
define('MERCI_RESERVATION_DATE_FIELD', 'field_merci_reservation_date');
define('MERCI_RESERVATION', 'reservation');


function merci_reservation_ajax_callback($form, $form_state) {
  return $form['merci']['merci_container'];
}

/**
 * Implementation of hook_form_alter().
 */
function merci_reservation_form_node_type_form_alter(&$form, &$form_state) {
  
  $node_type = $form['#node_type']->type;
  $merci_type_setting = !empty($form_state['values']['merci_type_setting']) 
    ? $form_state['values']['merci_type_setting'] : variable_get('merci_type_setting_' . $node_type, 'disabled');
  // Node add/edit forms.

  $description_items = array(
    MERCI_RESERVATION => t('Use this content type to create reservation types.'),
  );
  $form['merci']['merci_type_setting']['#options'][MERCI_RESERVATION] = t('Reservation');
  $form['merci']['merci_type_setting']['#description_items'] += $description_items;
  $form['merci']['merci_type_setting']['#ajax'] = array(
    'callback' => 'merci_reservation_ajax_callback',
    'wrapper' => 'merci-preset-div',
  );

  $form['merci']['merci_container'] = array(
    '#type' => 'container',
    '#id'   => 'merci-preset-div',
  );
  if ($merci_type_setting == MERCI_RESERVATION) {
    $presets = merci_preset_load();

    // If there are presets prompt the user to select one or create another.
    // If no, prompt to create a preset.
    if (!empty($presets)) {
      foreach (merci_preset_load() as $preset => $item) {
        $options[$preset] = $item['preset_name'];
      }

      $form['merci']['merci_container']['merci_preset'] = array(
        '#title' => t('Select preset'),
        '#type' => 'select',
        '#default_value' => variable_get('merci_preset_' . $node_type, 'disabled'),
        '#options' => $options,
      );
      $form['merci']['merci_container']['links'] = array(
        '#theme' => 'links',
        '#links' => array(
          array(
            'title' => t('Create new preset'),
            'href' => 'admin/structure/merci/merci/add',
          ),
          array(
            'title' => t('Manage presets'),
            'href' => 'admin/structure/merci/merci',
          ),
        ),
      );
    }
    else {
      $form['merci']['merci_container']['no_preset_message'] = array(
        '#markup' => '<div class="messages warning">' . t('No presets are available. You must to <a href="@create">create a preset</a> to proceed.', array('@create' => url('admin/structure/merci/merci/add'))) . '</div>',
      );
    }
    $data = '(function ($) { $(document).ready(function() { $("input").click(function() { ($(this).val() == "reservation") ? $("#merci-preset-div").show() : $("#merci-preset-div").hide(); });}); })(jQuery);';
    //drupal_add_js($data, array('type' => 'inline'));
  }
}

function merci_reservation_merci_settings_load(&$settings) {
  $settings['date_field'] = MERCI_RESERVATION_DATE_FIELD;
  $settings['target_field'] = MERCI_RESERVATION_ITEM_FIELD; 
}

/**
 * Add group and group content fields to new content types.
 *
 * @param $bundle_name
 *   The content type name.
 */
function merci_reservation_merci_node_type_save($bundle_name) {
  if (variable_get('merci_type_setting_' . $bundle_name, 'disabled') == MERCI_RESERVATION) {
    merci_create_field(MERCI_RESERVATION_DATE_FIELD, 'node', $bundle_name);
    merci_create_field(MERCI_RESERVATION_ITEM_FIELD, 'node', $bundle_name);
  }
}
/**
 * Implements hook_merci_fields_info().
 */
function merci_reservation_merci_fields_info() {
  $fields = array();

  // Exported field: 'node-merci_reservation-field_merci_date'.
  $fields[MERCI_RESERVATION_DATE_FIELD] = array(
    'field' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => MERCI_RESERVATION_DATE_FIELD,
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'date',
      'settings' => array(
        'cache_count' => '4',
        'cache_enabled' => 0,
        'granularity' => array(
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'month' => 'month',
          'second' => 0,
          'year' => 'year',
        ),
        'timezone_db' => 'UTC',
        'todate' => 'required',
        'tz_handling' => 'site',
      ),
      'translatable' => '0',
      'type' => 'datetime',
    ),
    'instance' => array(
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'date',
          'settings' => array(
            'format_type' => 'long',
            'fromto' => 'both',
            'multiple_from' => '',
            'multiple_number' => '',
            'multiple_to' => '',
          ),
          'type' => 'date_default',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'label' => 'Merci Date',
      'required' => 0,
      'settings' => array(
        'default_value' => 'now',
        'default_value2' => 'same',
        'default_value_code' => '',
        'default_value_code2' => '',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'date',
        'settings' => array(
          'increment' => '15',
          'input_format' => 'Y-m-d H:i:s',
          'input_format_custom' => '',
          'label_position' => 'above',
          'text_parts' => array(),
          'year_range' => '-3:+3',
        ),
        'type' => 'date_popup',
        'weight' => '-4',
      ),
    ),
  );

  // Exported field: 'node-merci_reservation-field_merci_items'.
  $fields[MERCI_RESERVATION_ITEM_FIELD] = array(
    'field' => array(
      'active' => '1',
      'cardinality' => '-1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => MERCI_RESERVATION_ITEM_FIELD,
      'foreign keys' => array(
        'node' => array(
          'columns' => array(
            'target_id' => 'nid',
          ),
          'table' => 'node',
        ),
      ),
      'indexes' => array(
        'target_id' => array(
          0 => 'target_id',
        ),
      ),
      'locked' => '0',
      'module' => 'entityreference',
      'settings' => array(
        'handler' => 'base',
        'handler_settings' => array(
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
          ),
          'sort' => array(
            'type' => 'none',
          ),
          'target_bundles' => array(),
        ),
        'target_type' => 'node',
      ),
      'translatable' => '0',
      'type' => 'entityreference',
    ),
    'instance' => array(
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'entityreference',
          'settings' => array(
            'link' => FALSE,
          ),
          'type' => 'entityreference_label',
          'weight' => 1,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'label' => 'Merci Items',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 0,
        'module' => 'multiple_selects',
        'settings' => array(),
        'type' => 'multiple_selects',
        'weight' => '-3',
      ),
    ),
  );


  return $fields;
}
