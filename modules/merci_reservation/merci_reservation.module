<?php

define('MERCI_RESERVATION_ITEM_FIELD', 'field_merci_reservation_items');
define('MERCI_RESERVATION_DATE_FIELD', 'field_merci_reservation_date');
define('MERCI_RESERVATION', 'reservation');

/**
 * UI controller.
 */
class MerciReservationTypeUIController extends EntityDefaultUIController {

  /**
   * Overrides hook_menu() defaults.
   */
  public function hook_menu() {
    $items = parent::hook_menu();
		$items[$this->path]['description'] = 'Manage merci_reservation_detail entity types, including adding
		and removing fields and the display of fields.';
    return $items;
  }
}

/**
 * Implements hook_entity_info().
 */
function merci_reservation_entity_info() {
  $entities['merci_reservation'] = array(
    'label' => t('Merci reservation'),
    'plural label' => t('Merci reservations'),
    'base table' => 'merci_reservation',
    'fieldable' => TRUE,
    'entity class' => 'MerciReservation',
    'controller class' => 'MerciReservationController',
    'access callback' => 'merci_reservation_access',
    'label callback' => 'entity_class_label',
    'uri callback' => 'entity_class_uri',
    'module' => 'merci_reservation',
    'entity keys' => array(
      'id'     => 'id',
      'bundle' => 'type',
      'label'  => 'label',
      'name'   => 'name',
    ),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
    'admin ui' => array(
      'path' => 'merci-reservations',
      'file' => 'merci_reservation.pages.inc',
      'controller class' => 'EntityBundleableUIController',
      //'menu_wildcard' => '%merci_reservation',
    ),
    'bundles' => array(),
    'view modes' => array(),
  );
  // The entity that holds information about the entity types	  
  $entities['merci_reservation_type'] = array(
    'label' => t('MerciReservation Type'),
    'entity class' => 'MerciReservationType',
    'controller class' => 'MerciReservationTypeController',
    'base table' => 'merci_reservation_type',
    'fieldable' => FALSE,
    'bundle of' => 'merci_reservation',
    'exportable' => TRUE,
    'entity keys' => array(
      'id'    => 'id',
      'name'  => 'type',
      'label' => 'label',
    ),
    'access callback' => 'merci_reservation_type_access',
    'module' => 'merci_reservation',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'admin/structure/merci-reservation-types',
      'file' => 'merci_reservation.admin.inc',
      'controller class' => 'EntityDefaultUIController',
      //'controller class' => 'MerciReservationTypeUIController',
    ),
  );
  return $entities;
}

/**
* Implements hook_entity_info_alter().
*/
function merci_reservation_entity_info_alter(&$entity_info) {
  foreach (merci_reservation_types() as $type => $info) {
    $entity_info['merci_reservation']['bundles'][$type] = array(
      'label' => $info->label,
      'admin' => array(
        'path' => 'admin/structure/merci-reservation-types/manage/%merci_reservation_type',
        'real path' => 'admin/structure/merci-reservation-types/manage/' . $type,
        'bundle argument' => 4,
        'access arguments' => array('administer merci_reservation types'),
      ),
    );
  }
}

/**
 * Menu argument loader; Load a merci_reservation_detail type by string.
 *
 * @param $type
 *   The machine-readable name of a merci_reservation_detail type to load.
 * @return
 *   A merci_reservation_detail type array or FALSE if $type does not exist.
 */
function merci_reservation_type_load($type) {
  return merci_reservation_types($type);
}

/**
  * * List of task Types.
  * */
function merci_reservation_types($type_name = NULL) {
    $types = entity_load_multiple_by_name('merci_reservation_type', isset($type_name) ? array($type_name) : FALSE);
      return isset($type_name) ? reset($types) : $types;
}

function merci_reservation_permission() {
  $permissions = array(
    'administer merci_reservation types' => array(
      'title' => t('Administer merci reservation types'),
      'description' => t('Allows users to configure task types and their fields.'),
      'restrict access' => TRUE,
    ),
    'create merci_reservation entities' => array(
      'title' => t('Create merci reservations'),
      'description' => t('Allows users to create merci reservations.'),
      'restrict access' => TRUE,
    ),
    'view merci_reservation entities' => array(
      'title' => t('View merci reservations'),
      'description' => t('Allows users to view merci reservations.'),
      'restrict access' => TRUE,
    ),
    'edit any merci_reservation entities' => array(
      'title' => t('Edit any merci reservations'),
      'description' => t('Allows users to edit any merci reservations.'),
      'restrict access' => TRUE,
    ),
    'edit own merci_reservation entities' => array(
      'title' => t('Edit own merci reservations'),
      'description' => t('Allows users to edit own merci reservations.'),
      'restrict access' => TRUE,
    ),
  );
  return $permissions;
}
/**
* Access callback for Task.
*/
function merci_reservation_access($op, $merci_reservation, $account = NULL, $entity_type = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('create merci_reservation entities', $account);
    case 'view':
      return user_access('view merci_reservation entities', $account);
    case 'edit':
      return user_access('edit any merci_reservation entities')
          || (user_access('edit own merci_reservation entities') && ($merci_reservation->uid == $account->uid));
  }
}

/**
 * Access callback for the entity API.
 */
function merci_reservation_type_access($op, $type = NULL, $account = NULL) {
  return user_access('administer merci_reservation types', $account);
}

/**
 * Implements hook_merci_fields_info().
 */
function merci_reservation_merci_fields_info() {
  $fields = array();

  // Exported field: 'node-merci_reservation-field_merci_date'.
  $fields[MERCI_RESERVATION_DATE_FIELD] = array(
    'field' => array(
      'entity_types' => array('merci_reservation'),
      'field_name' => MERCI_RESERVATION_DATE_FIELD,
      'type' => 'datetime',
    ),
    'instance' => array(
      'label' => 'Merci Date',
      'required' => TRUE,
      'entity_type' => 'merci_reservation',
    ),
  );

  // Exported field: 'node-merci_reservation-field_merci_items'.
  $fields[MERCI_RESERVATION_ITEM_FIELD] = array(
    'field' => array(
      'cardinality' => '-1',
      'entity_types' => array('merci_reservation'),
      'field_name' => MERCI_RESERVATION_ITEM_FIELD,
      'type' => 'entityreference',
    ),
    'instance' => array(
      'label' => 'Merci Items',
      'required' => TRUE,
    ),
  );


  return $fields;
}

function merci_reservation_merci_reservation_type_insert($entity) {
  dpm($entity);
  merci_create_field(MERCI_RESERVATION_DATE_FIELD, 'merci_reservation_type', $entity->type);
  merci_create_field(MERCI_RESERVATION_ITEM_FIELD, 'merci_reservation_type', $entity->type);
}
