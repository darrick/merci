<?php

module_load_include('inc', 'merci', 'merci.validate');
define('MERCI_BUCKET', 'bucket');

/**
 * Implementation of hook_form_alter().
 */
function merci_bucket_form_alter(&$form, &$form_state, $form_id) {
  
  // Node add/edit forms.

  if($form_id == 'node_type_form') {
    $form['merci']['merci_type_setting']['#options'][MERCI_BUCKET] = t('Bucket');
  }
}

/**
 * Implementation of hook_node_validate().
 */
function merci_bucket_node_validate($node, $form, &$form_state) {

  if (is_merci_reservation_node($node)) {

    if (!empty($form_state['ahah_submission'])) {
      return;
    }

    // No validation necessary on deletion.
    if ($form_state['triggering_element']['#id'] == 'edit-delete') {
      return;
    }

    // Do no validation if their errors from the main validation function.
    if (form_get_errors()) {
      return;
    }

    $entity_type = 'node';
    $merci_settings = merci_settings_load($entity_type, $node->type);
    $target_field = $merci_settings['target_field'];
    $date_field = $merci_settings['date_field'];
    $langcode = $node->language;
    $items = $node->{$target_field}[$langcode];

    $errors = array();

    merci_bucket_merci_validate_items($entity_type, $node, $date_field, $target_field, $items, &$errors);

    if (count($errors)) {
      foreach ($errors[$target_field][$langcode] as $delta => $error) {
        //$errors[$target_field][$langcode][$delta][] = array(
        foreach($error as $error_message){
          $messages[] = $error_message['message'];
        }
        form_set_error("$target_field][$langcode][$delta][target_id", implode('<br>', $messages)); 
      }
    }
  }
}

function merci_bucket_merci_validate_items($entity_type, $entity, $date_field, $target_field, $items, &$errors){

  foreach ($items as $delta => $item) {
    if (!$item['target_id']) {
      unset($items[$delta]);
    }
  }
  unset($items['add_more']);

  $target_field_info = field_read_field($target_field);
  $target_type = $target_field_info['settings']['target_type'];
  $langcode = $entity ? $entity->language : LANGUAGE_NONE;

  foreach ($items as $delta => $item) {
    $target_id = $item['target_id'];
    $entities = entity_load($target_type, array($target_id));
    $node = reset($entities);
    if (merci_type_setting($node) != MERCI_BUCKET) {
      continue;
    }

    $bucket_field = 'field_bucket_items';
    // No slots for this reservation.
    $conflicts = merci_api_check_bucket_conflicts($entity_type, $entity, $date_field, $target_field, $bucket_field, $target_id); 
    if ($conflicts){
      // Ran out out of items to use for this reservation.
      $errors[$target_field][$langcode][$delta][] = array(
        'error' => 'merci_item_conflict',
        'message' => t('%name: the item cannot be reserved at this time.', array('%name' => $node->title)),
      );
      break;
    }

  }
}
