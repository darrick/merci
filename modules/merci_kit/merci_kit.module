<?php

/**
 * @file
 * MERCI KIT - Managed Equipment Reservation Checkout and Inventory.
 */

define('MERCI_KIT_MERCI_FIELD_KIT', 'merci_field_kit');
define('MERCI_KIT_MERCI_FIELD_KIT_ITEMS', 'merci_field_kit_items');
define('MERCI_KIT_MERCI_KIT', 'reservable_kit');


/**
 * Implements hook_node_info().
 */
function merci_kit_node_info() {
  $items = array(
    MERCI_KIT_MERCI_KIT => array(
      'name' => t('Reservable kit'),
      'base' => 'node_content',
      'description' => '',
      'has_title' => '1',
      'title_label' => t('Title'),
      'help' => '',
    ),
  );
  drupal_alter('node_info', $items);
  return $items;
}

/**
 * Implements hook_field_widget_form_alter().
 *
 * Limit the options in the merci_choice widget.
 */
function merci_kit_field_widget_form_alter(&$element, &$form_state, $context) {

  $form_id = drupal_array_get_nested_value($form_state, array(
    'build_info',
    'form_id',
  ));

  if ($form_id == 'merci_reservation_node_form' and $context['field']['field_name'] == MERCI_KIT_MERCI_FIELD_KIT) {

    $cache = &drupal_static(__FUNCTION__);

    if (!isset($cache)) {

      $options = array(
        '_none' => '- None -',
      );

      if (isset($form_state['values'])) {
        $node = (array) $form_state['values'] + (array) $element['#entity'];
      }
      else {
        $node = $element['#entity'];
      }

      $node = (object) $node;

      $node_wrapper = entity_metadata_wrapper('node', $node);

      $location = $node_wrapper->{MERCI_FIELD_LOCATION};
      if ($location_id = $location->getIdentifier()) {
        // Get our kits to refer to.
        $query = new EntityFieldQuery();
        $query->entityCondition('entity_type', 'node');
        // Limit for all the referrable bundles.
        $query->entityCondition('bundle', 'reservable_kit');
        // Limit for the matching field values.
        $query->fieldCondition(MERCI_FIELD_LOCATION, 'target_id', $location_id);

        $result = $query->execute();

        // Load the resulting entities.
        if (!empty($result['node'])) {
          $entities = entity_load('node', array_keys($result['node']));
        }
        else {
          $entities = array();
        }

        // Build an array of options.
        $options_limited = array();
        foreach ($entities as $entity) {
          list($id, $vid, $bundle) = entity_extract_ids('node', $entity);
          $options_limited[$id] = entity_label('node', $entity);
        }
        $options_limited_empty = (count($options_limited) == 0);


        // Add an explanation if there are no options to select at all.
        if ($options_limited_empty) {
          $form[MERCI_KIT_MERCI_FIELD_KIT][LANGUAGE_NONE]['#description'] = ' ' . t('<b>No options are available for the current form values. Try selecting different values for the following fields: @fields.</b>', array(
            '@fields' => 'Location',
          ));
        }
        else {
          $options += $options_limited;
        }

      }
      $cache = array(
        'options' => $options,
        'selected' => array(),
      );
    }
    $settings = drupal_array_get_nested_value($form_state, array('merci_kit', $element['#delta']));

    if ($settings) {
      $element['#choices_added'] = $settings['choices_added'];
      $element['#last_target_id'] = $settings['last_target_id'];
    }

    $element['target_id']['#options'] = array_diff_key($cache['options'], $cache['selected']);

    $current = drupal_array_get_nested_value($form_state, array(
      'values',
      MERCI_KIT_MERCI_FIELD_KIT,
      LANGUAGE_NONE,
      $context['delta'],
      'target_id',
    ));

    if ($current) {
      $cache['selected'][$current] = TRUE;
    }

    $element['target_id']['#ajax'] = array(
      'callback' => 'merci_kit_js',
      'wrapper' => 'merci-choice-wrapper',
    );
    $element['target_id']['#element_validate'][] = 'merci_kit_element_validate';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Limit the options in the merci_choice widget.
 */
function merci_kit_form_merci_reservation_node_form_alter(&$form, &$form_state, $form_id) {

  $element = &$form[MERCI_KIT_MERCI_FIELD_KIT];
  $element['#prefix'] = '<div id="merci-field-kit-wrapper">';
  $element['#suffix'] = '</div>';
  $element[LANGUAGE_NONE]['add_more']['#limit_validation_errors'][] = array(MERCI_FIELD_LOCATION, LANGUAGE_NONE);

}

function merci_kit_merci_reservation_items_alter(&$items, $node) {
  foreach ($items as $did => $item) {
    // Get our kits to refer to.
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    // Limit for all the referrable bundles.
    $query->entityCondition('bundle', MERCI_KIT_MERCI_KIT);
    // Limit for the matching field values.
    $query->fieldCondition(MERCI_KIT_MERCI_FIELD_KIT_ITEMS, 'target_id', $item['merci_item_nid']);

    $result = $query->execute();

    // Load the resulting entities.
    if (!empty($result['node'])) {
      $items[$did]['merci_kit_nid'] = key($result['node']);
    }
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function merci_kit_element_validate($element, &$form_state, $form) {

  $field_name = drupal_array_get_nested_value($form_state, array('triggering_element', '#field_name'));
  if ($field_name == MERCI_KIT_MERCI_FIELD_KIT) {
    $last_target_id = drupal_array_get_nested_value($form, array(MERCI_KIT_MERCI_FIELD_KIT, LANGUAGE_NONE, $element['#delta'], '#last_target_id'));
    $choices_added = drupal_array_get_nested_value($form, array(MERCI_KIT_MERCI_FIELD_KIT, LANGUAGE_NONE, $element['#delta'], '#choices_added'));

    // Remove choices when kit is changed/removed.
    if (is_numeric($last_target_id) and $last_target_id != $element['#value']) {
      // Get index.
      $id = 1;
      $items_to_remove = array();

      $node = node_load($last_target_id);
      $node_wrapper = entity_metadata_wrapper('node', $node);
      foreach ($node_wrapper->{MERCI_KIT_MERCI_FIELD_KIT_ITEMS}->getIterator() as $index => $item) {
        $items_to_remove[] = $item->getIdentifier();
      }

      $choices = array();
      foreach ($form_state['values']['merci_reservation_items'] as $index => $choice) {
        if (is_array($choice)) {
          if (in_array($choice['merci_item_nid'], $items_to_remove)) {
            unset($form_state['values']['merci_reservation_items'][$index]);
          }
          else {
            $choices['choice_' . $id] = $choice;
            $id++;
          }
        }
        else {
          $choices[$index] = $choice;

        }
      }

      $form_state['input']['merci_reservation_items'] = $choices;
      $form_state['values']['merci_reservation_items'] = $choices;
      $form_state['values']['choice_count'] = $id + 3;
      $form_state['merci_kit'][$element['#delta']] = array(
        'choices_added' => FALSE,
        'last_target_id' => $element['#value'],
      );
    }

    // Add kit items to choice array.
    if (is_numeric($element['#value']) and !$choices_added) {
      // Get next index.
      $id = 1;
      foreach ($form_state['values']['merci_reservation_items'] as $index => $choice) {
        if (is_array($choice) and empty($choice['merci_item_nid'])) {
          list($junk, $id) = explode('_', $index);
          break;
        }
      }

      $node = node_load($element['#value']);
      $node_wrapper = entity_metadata_wrapper('node', $node);
      foreach ($node_wrapper->{MERCI_KIT_MERCI_FIELD_KIT_ITEMS}->getIterator() as $index => $item) {
        $form_state['values']['merci_reservation_items']['choice_' . $id] = array(
          'merci_item_nid' => $item->getIdentifier(),
        );
        $id++;
      }

      $form_state['input']['merci_reservation_items'] = $form_state['values']['merci_reservation_items'];
      $form_state['values']['choice_count'] = $id + 3;
      $form_state['merci_kit'][$element['#delta']] = array(
        'choices_added' => TRUE,
        'last_target_id' => $element['#value'],
      );
    }
  }
}

/**
 * Ajax callback for the updated location reference field.
 */
function merci_kit_js($form, $form_state) {

  $commands = array();
  $commands[] = ajax_command_replace('#merci-choice-wrapper', drupal_render($form['choice_wrapper']));
  $commands[] = ajax_command_replace('#merci-field-location-wrapper', drupal_render($form[MERCI_FIELD_LOCATION]));
  return array('#type' => 'ajax', '#commands' => $commands);
}
