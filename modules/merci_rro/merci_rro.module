<?php
// $Id$

/**
 * Implementation of hook_menu().
 */
 
function merci_rro_menu() {

  $items = array();

  foreach (array_keys(node_get_types()) as $type_name) {
  
    $type_url_str = str_replace('_', '-', $type_name);
    
    $items['admin/content/node-type/'. $type_url_str .'/merci_rro'] = array(
      'title' => 'MERCI Role Rule Overrides',
      'page callback' => 'merci_rro_admin_page',
      'page arguments' => array($type_name),
      'access callback' => 'menu_rro_node_type_menu_access',
      'access arguments' => array($type_name),
      'type' => MENU_LOCAL_TASK,
      'weight' => 10,
      'file' => 'merci_rro.admin.inc',
    );

  } // foreach

  return $items;

} // merci_rro_menu

function menu_rro_node_type_menu_access($type_name) {

  $merci_settings = merci_load_content_type_settings($type_name);

  if ($merci_settings->type_setting != 'disabled' && user_access('administer MERCI')) {

    return true;

  } // if

  return false;

} // menu_rro_node_type_menu_access

/**
 * Returns list of overrides associated with a given content type
 */

function merci_rro_content_type_overrides($content_type, $cache = true) {

  static $overrides = array();
  
  if (! isset($overrides[$content_type]) || ! $cache) {
  
    $overrides[$content_type] = array();
  
    $result = db_query("SELECT * FROM {merci_rro} WHERE type = '%s'", $content_type);

    while ($override = db_fetch_object($result)) {

      $overrides[$content_type][] = $override;

    } // while

  } // if
  
  return $overrides[$content_type];

} // merci_rro_content_type_overrides

/**
 * Implementation of hook_theme().
 */

function merci_rro_theme($existing, $type, $theme, $path) {

  return array(
    'merci_rro_override' => array(
      'arguments' => array('override' => NULL),
    ),
  );

} // merci_rro_theme

/**
 * Theme an override object
 */

function theme_merci_rro_override($override) {

  $role = merci_rro_role_name_from_rid($override->rid); 

  $html = '<div class="merci-rro-override">
    <h3 class="fn">' . check_plain($role) . '</h3>
    <ul>
      <li><b>' . t('Maximum hours per reservation:') . '</b> <span class="value">' . $override->max_hours_per_reservation . '</span></li>
      <li><b>' . t('Allow overnight reservation:') . '</b> <span class="value">' . (($override->allow_overnight == 1) ? 'Yes' : 'No') . '</span></li>
      <li><b>' . t('Allow weekend reservation:') . '</b> <span class="value">' . (($override->allow_weekends == 1) ? 'Yes' : 'No') . '</span></li>
      <li><b>' . t('Rate per hour:') . '</b> <span class="value">' . $override->rate_per_hour . '</span></li>
      <li><b>' . t('Late fee per hour:') . '</b> <span class="value">' . $override->late_fee_per_hour . '</span></li>
      <li><b>' . t('Fee free hours:') . '</b> <span class="value">' . $override->fee_free_hours . '</span></li>
      <li><b>' . t('Minimum hours for cancelation without No Show:') . '</b> <span class="value">' . $override->min_cancel_hours . '</span></li>
    </ul>';
    
  if (user_access('administer MERCI')) {

    $html.= '<p><a href="' . base_path() . 'admin/content/node-type/' . $override->type . '/merci_rro?delete=' . $override->rid . '">Remove</a></p>';
  
  } // if
  
  $html.= '</div>';
  
  return $html;

} // theme_merci_rro_override

function merci_rro_role_name_from_rid($rid, $cache = true) {

  static $roles;
  
  if (! isset($roles) || ! $cache) {
  
    $roles = user_roles();
  
  } // if

  return $roles[$rid];

} // merci_rro_role_name_from_rid

/**
 * Implementation of hook_merci_rules_alter().
 */

function merci_rro_merci_rules_alter($rules) {

  

} // merci_rro_merci_rules_alter