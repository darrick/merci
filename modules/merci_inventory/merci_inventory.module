<?php
// $Id$


/**
 * @file
 * Hooks and functions for MERCI Inventory
 */
 
/**
 * Implementation of hook_node_info().
 */
function merci_inventory_node_info() {
  return array(
    // Inventory nodes.
    'merci_inventory' => array(
      'name' => t('Inventory'),
      'module' => 'merci_inventory',
      'has_body' => TRUE,
      'description' => t("An Inventory node contains is a simple list of other nodes."),
    ),
    // Inventory Master nodes.
    'merci_inventory_master' => array(
      'name' => t('Inventory Master'),
      'module' => 'merci_inventory',
      'has_body' => FALSE,
      'description' => t("Add additional CCK fields to the Inventory Master content type to synchronize to other MERCI managed content types."),
    ),
  );
}

/**
 * Implementation of hook_form().
 *
 */
function merci_inventory_form(&$node, $form_state) {

  $type = node_get_types('type', $node);

  if ($type->has_title) {
    $form['title'] = array(
      '#type' => 'textfield',
      '#title' => check_plain($type->title_label),
      '#required' => TRUE,
      '#default_value' => $node->title,
      '#weight' => -5
    );
  }

  if ($type->has_body) {
    $form['body_field'] = node_body_field($node, $type->body_label, $type->min_word_count);
  }

  return $form;
}

/**
 * Implementation of hook_menu().
 */
function merci_inventory_menu() {

  $items = array();

  foreach (array_keys(node_get_types()) as $type_name) {

    $type_url_str = str_replace('_', '-', $type_name);

    $items['admin/content/node-type/'. $type_url_str .'/merci_inventory'] = array(
      'title' => 'MERCI Inventory',
      'page callback' => 'merci_inventory_admin_page',
      'page arguments' => array($type_name),
      'access callback' => 'merci_inventory_node_type_menu_access',
      'access arguments' => array($type_name),
      'type' => MENU_LOCAL_TASK,
      'weight' => 10,
    );
  }
  // foreach

  return $items;
}
// merci_inventory_menu

/**
 * Access check
 */
function merci_inventory_node_type_menu_access($type_name) {

  $types = merci_inventory_sync_resource_types();

  if ((!in_array($type_name, $types)) && user_access('administer MERCI')) {
    return TRUE;
  }
  // if

  return FALSE;
}
// merci_inventory_node_type_menu_access

/**
 * Menu callback; sync fields
 */
function merci_inventory_admin_page($type_name = NULL) {

  $html .= '<h2>Sync Inventory Fields</h2>';
  $html .= drupal_get_form('merci_inventory_sync_fields', $type_name);

  return $html;
}
// merci_inventory_admin_page

/**
 * Field sync form
 */
function merci_inventory_sync_fields(&$form_state, $type_name) {

  $form = array();

  $form['merci_inventory_type'] = array(
    '#type' => 'hidden',
    '#value' => $type_name,
  );

  $form['merci_inventory_sync_to_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Sync fields from') .' <i>'. $type_name .'</i> '. t('to these types'),
    '#options' => array(),
  );

  $types = merci_inventory_sync_resource_types();

  foreach ($types as $type) {
    $form['merci_inventory_sync_to_types']['#options'][$type] = $type;
  }
  // foreach

  $form['merci_inventory_submit'] = array('#type' => 'submit', '#value' => t('Sync Fields'));
  $form['#submit'] = array('merci_inventory_sync_fields_submit');

  return $form;
}
// merci_inventory_sync_fields

/**
 * Field sync form submission handler
 */
function merci_inventory_sync_fields_submit($form_id, $form_values) {

  module_load_include('inc', 'content', 'includes/content.crud');

  $added = 0;

  $values    = $form_values['values'];
  $base_type = $values['merci_inventory_type'];
  $params    = array('type_name' => $base_type);

  $fields = content_field_instance_read($params);

  // Sync groups if fieldgroup module is enabled

  if (module_exists('fieldgroup')) {
    $groups = fieldgroup_groups($base_type);
  }
  // if
  else {
    $groups = array();
  }
  // else

  $new_fields=array();
  $update_fields=array();

  foreach ($values['merci_inventory_sync_to_types'] as $type => $value) {

    if ($value !== 0) {

      foreach ($fields as $field) {

        $field['type_name'] = $type;

        $params['type_name'] = $type;
        $params['field_name'] = $field['field_name'];
        $field_exists = content_field_instance_read($params);

        if (count($field_exists) == 0) {

          // Sync field
          $new_fields[] = $field;

          //content_field_instance_create($field);
          drupal_set_message(t('%field_name was added to %type', array('%field_name' => $field['field_name'], '%type' => $type )));
          $added++;
        }
        // if
        else {

          // Update all weights (faster than checking for which weights need updating)

          $field_exists[0]['widget']['weight'] = $field['widget']['weight'] + 1000;
          $update_fields[] = $field_exists[0];
          //content_field_instance_update($field_exists[0]);
        }
        // else
      }
      // foreach
    }
  }
  // Update several fields at a time.
  foreach ($update_fields as $field) {
    content_field_instance_update($field, FALSE);
  }
  // Create several fields at a time.
  foreach ($new_fields as $field) {
    content_field_instance_create($field, FALSE);
  }

  // Clear caches and rebuild menu.
  content_clear_type_cache(TRUE);
  menu_rebuild();

  foreach ($values['merci_inventory_sync_to_types'] as $type => $value) {

    if ($value !== 0) {

      if (module_exists('fieldgroup')) {

        $existing_groups = fieldgroup_groups($type);

        foreach ($groups as $group_name => $group) {

          if (!isset($existing_groups[$group_name])) {

            // Add group

            fieldgroup_save_group($type, $group);
            drupal_set_message(t('%group_name was added to %type', array('%group_name' => $group_name, '%type' => $type) ));
            $added++;

            $existing_groups = fieldgroup_groups($type, FALSE, TRUE);
          }
          // if
          else {

            // Update all weights

            db_query("UPDATE {". fieldgroup_tablename() ."} SET weight = %d WHERE type_name = '%s' AND group_name = '%s'",
              $group['weight'] + 1000, $type, $group_name
            );
          }
          // else

          // Sync fields in group

          foreach ($group['fields'] as $field_name => $field) {

            if (!isset($existing_groups[$group_name]['fields'][$field_name])) {

              $group_field_params = array(
                'group' => $group_name,
                'field_name' => $field_name,
                'type_name' => $type,
              );

              fieldgroup_update_fields($group_field_params);

            drupal_set_message(t('%field_name was moved into group %group_name of %type', array('%field_name' => $field_name, '%group_name' => $group_name, '%type' => $type )));
              $added++;
            }
            // if
          }
          // foreach
        }
        // foreach
      }
      // if
    }
    // if
  }
  // foreach

  if ($added == 0) {
    drupal_set_message(t('No fields were synced, because all fields in %type are already synced in all selected types', array( '%type' => $values['merci_inventory_type'] )));
  }
  // if
}
// merci_inventory_sync_fields_submit
function merci_inventory_sync_resource_types($reset = FALSE) {

  static $types = FALSE;

  if ((!is_array($types)) || $reset) {

    $types = array();
    $merci_types = merci_content_types();

    foreach ($merci_types as $type) {
      $types[] = $type->type;
    }
    // while
  }
  // if

  return $types;
}
// merci_inventory_sync_resource_types

/**
 * Implementation of hook_node_operations().
 */
function merci_inventory_node_operations($return=null) {
  $operations = array(
    'merci_inventory_update' => array(
      'label' => t('Confirm These Items Are Currently in Inventory'),
      'callback' => 'merci_inventory_operations_update',
    ),
  );
  return $operations;
}

/**
 * Callback function for adding items to new merci_inventory node.
 */
function merci_inventory_operations_update($nodes) {
  global $user;
  
  $account = user_load(array('uid' => $user->uid));
  
  // Construct the new node object.
  $node = new stdClass();

  $node->title = 'Inventory - ' . format_date(time(), $type = 'small');
  $node->type = 'merci_inventory';
  $node->created = time();
  $node->changed = $node->created;
  $node->status = 1;          // Published?
  $node->promote = 0;       // Display on front page?
  $node->sticky = 0;          // Display top of page?
  $node->format = 1;         // Filtered HTML?
  $node->uid = $account->uid;             //  Content owner uid (author)?
  $node->language = 'en';

  $count = 0;
  foreach ($nodes as $nid) {
    $node->field_merci_inventory_item[$count]['nid']  = $nid;
    $count++; 
  }
  
  //node_submit($node);
  node_save($node);
}

/**
 * Implementation of hook_views_api().
 */
function merci_inventory_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'merci_inventory'),
  );
}

