<?php

/**
 * @file
 * MERCI NSCAD - Managed Equipment Reservation Checkout and Inventory.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Limit the options in the merci_choice widget.
 */
function merci_nscad_form_merci_reservation_node_form_alter(&$form, &$form_state, $form_id) {

  if (isset($form_state['values'])) {
    $node = (array) $form_state['values'] + (array) $form['#node'];
  }
  else {
    $node = $form['#node'];
  }

  $node = (object) $node;

  $node_wrapper = entity_metadata_wrapper('node', $node);

  $location = $node_wrapper->{MERCI_FIELD_LOCATION};

  // Selection widget for quantity of reservable items.
  //
  $form['merci_quantity_widget'] = array(
    '#type' => 'fieldset',
    '#title' => t('Add multiple bucket items'),
    '#prefix' => '<div id="merci-quantity-widget-wrapper">',
    '#suffix' => '</div>',
  );

  // Put our validation first.
  array_unshift($form['#validate'], "merci_nscad_node_validate");


  if ($location_id = $location->getIdentifier()) {

    $filtered_options = drupal_array_get_nested_value($form, array(
      'choice_wrapper',
      'merci_reservation_items',
      'choice_1',
      'merci_item_nid',
      '#options',
    ));

    $quantity_add_options = array('' => t('<Select>'));
    foreach ($filtered_options as $group => $option) {
      if (is_array($option)) {
        foreach ($option as $item_id => $item) {
          if (is_string($item_id)) {
            if (!array_key_exists($group, $quantity_add_options)) {
              $quantity_add_options[$group] = array();
            }
            $quantity_add_options[$group][$item_id] = $item;
          }
        }
      }
    }

    $form['merci_quantity_widget']['merci_quantity_item'] = array(
      '#type' => 'select',
      '#title' => t('Item to add'),
      '#options' => $quantity_add_options,
    );

    $form['merci_quantity_widget']['merci_quantity'] = array(
      '#type' => 'textfield',
      '#label' => t('Quantity'),
      '#size' => 2,
      '#maxlength' => 2,
    );

    $form['merci_quantity_widget']['merci_quantity_button'] = array(
      '#type' => 'submit',
      '#value' => t('Add item'),
      '#name' => 'merci_quantity_button',
      '#limit_validation_errors' => array(array('merci_quantity_widget'), array(MERCI_FIELD_LOCATION, LANGUAGE_NONE), array('choice_count')),
      '#submit' => array('merci_nscad_add_multiple_buckets'),
      // See the examples in ajax_example.module for more details on the
      // properties of #ajax.
      '#ajax' => array(
        'callback' => 'merci_nscad_add_multiple_buckets_js',
      ),
    );
  }
}

/**
 * Implementation of hook_content_extra_fields.
 */
function merci_nscad_field_extra_fields() {
  $extra['node']['merci_reservation'] = array(
    'form' => array(
      'merci_quantity_widget' => array(
        'label' => t('MERCI Quantity Widget'),
        'description' => t('Allows user to select buckets to add to reservation.'),
        'weight' => 100,
      ),
    ),
    'display' => array(
      'merci_quantity_widget' => array(
        'label' => t('MERCI Quantity Widget'),
        'description' => t('Allows user to select buckets to add to reservation.'),
        'weight' => 100,
      ),
    )
  );
  return $extra;
}

/**
 * Submit handler for the "add-one-more" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function merci_nscad_add_multiple_buckets($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function merci_nscad_node_validate($form, &$form_state) {

  // Adding multiple quantities of buckets.

  // Handle adding multiple bucket items.
  $trigger_name = drupal_array_get_nested_value($form_state, array('triggering_element', '#name'));
  if ($trigger_name == 'merci_quantity_button') {
    $bucket_type = $form_state['values']['merci_quantity_item'];
    if (empty($bucket_type)) {
      form_set_error('merci_quantity_item', t('You need to select a bucket item to add.'));
    }

    $quantity = $form_state['values']['merci_quantity'];
    if (intval($quantity) <= 0) {
      form_set_error('merci_quantity', t('You need to select a quantity greater than zero.'));
    }

    if (!form_get_errors()) {
      // Get next index.
      $id = 1;
      foreach ($form_state['values']['merci_reservation_items'] as $index => $choice) {
        if (is_array($choice) and empty($choice['merci_item_nid'])) {
          list($junk, $id) = explode('_', $index);
          break;
        }
      }

      while ($quantity > 0) {
        $form_state['values']['merci_reservation_items']['choice_' . $id] = array(
          'merci_item_nid' => $bucket_type,
        );
        $id++;
        $quantity--;
      }

      $form_state['input']['merci_reservation_items'] = $form_state['values']['merci_reservation_items'];
      $form_state['values']['choice_count'] = $id + 3;

      unset($form_state['input']['merci_quantity_item']);
      unset($form_state['input']['merci_quantity']);
    }
  }
}

/**
 * Ajax callback for the updated location reference field.
 */
function merci_nscad_add_multiple_buckets_js($form, $form_state) {

  $commands = array();
  $commands[] = ajax_command_replace('#merci-choice-wrapper', drupal_render($form['choice_wrapper']));
  $commands[] = ajax_command_replace('#merci-quantity-widget-wrapper', drupal_render($form['merci_quantity_widget']));
  return array('#type' => 'ajax', '#commands' => $commands);
}
